[{"/Users/a1/Documents/Programming/portfolio-test/src/index.tsx":"1","/Users/a1/Documents/Programming/portfolio-test/src/reportWebVitals.ts":"2","/Users/a1/Documents/Programming/portfolio-test/src/App.tsx":"3","/Users/a1/Documents/Programming/portfolio-test/src/components/Navigation/NavBar.tsx":"4","/Users/a1/Documents/Programming/portfolio-test/src/components/Banner/Banner.tsx":"5","/Users/a1/Documents/Programming/portfolio-test/src/components/Skills/Skills.tsx":"6","/Users/a1/Documents/Programming/portfolio-test/src/components/Projects/Projects.tsx":"7","/Users/a1/Documents/Programming/portfolio-test/src/components/Contact/Contact.tsx":"8","/Users/a1/Documents/Programming/portfolio-test/src/components/Footer/Footer.tsx":"9","/Users/a1/Documents/Programming/portfolio-test/src/components/Projects/ProjectCard.tsx":"10","/Users/a1/Documents/Programming/portfolio-test/src/components/Footer/MailchimpForm.tsx":"11","/Users/a1/Documents/Programming/portfolio-test/src/components/Footer/NewsLetter.tsx":"12"},{"size":554,"mtime":1666619627785,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1666619627786,"results":"15","hashOfConfig":"14"},{"size":600,"mtime":1666619627750,"results":"16","hashOfConfig":"14"},{"size":2728,"mtime":1666619627782,"results":"17","hashOfConfig":"14"},{"size":2453,"mtime":1666619627779,"results":"18","hashOfConfig":"14"},{"size":1783,"mtime":1666619627784,"results":"19","hashOfConfig":"14"},{"size":3196,"mtime":1666619627784,"results":"20","hashOfConfig":"14"},{"size":3920,"mtime":1666619627780,"results":"21","hashOfConfig":"14"},{"size":1283,"mtime":1666619627781,"results":"22","hashOfConfig":"14"},{"size":501,"mtime":1666619627783,"results":"23","hashOfConfig":"14"},{"size":608,"mtime":1666619627781,"results":"24","hashOfConfig":"14"},{"size":1837,"mtime":1666619627782,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wl0uby",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a1/Documents/Programming/portfolio-test/src/index.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/reportWebVitals.ts",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/App.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Navigation/NavBar.tsx",["63","64","65"],[],"import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport logo from '../../assets/img/logo.svg';\nimport navIcon1 from '../../assets/img/nav-icon1.svg';\nimport navIcon2 from '../../assets/img/nav-icon2.svg';\nimport navIcon3 from '../../assets/img/nav-icon3.svg';\nimport './NavBar.css';\n\nconst NavBar = () => {\n  const [activeLink, setActiveLink] = useState('home');\n  const [scrolled, setScroll] = useState(false);\n\n  useEffect(() => {\n    const onScroll = () => {\n      window.scrollY > 50 ? setScroll(true) : setScroll(false);\n    };\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [setScroll]);\n\n  return (\n    <Navbar expand=\"lg\" className={scrolled ? \"scrolled\" : \"\"}>\n      <Container>\n        <Navbar.Brand href=\"#home\">\n          <img\n            src={logo}\n            alt=\"logo img\"\n            className=\"logo_img\"\n          />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </Navbar.Toggle>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link\n              href=\"#home\"\n              className={activeLink === 'home' ? 'active navbar-link': \"navbar-link\"}\n              onClick={() => setActiveLink('home')}\n            >\n              Home\n            </Nav.Link>\n            <Nav.Link\n              href=\"#skills\"\n              className={activeLink === 'skills' ? 'active navbar-link': \"navbar-link\"}\n              onClick={() => setActiveLink('skills')}\n            >\n              Skills\n            </Nav.Link>\n            <Nav.Link\n              href=\"#projects\"\n              className={activeLink === 'projects' ? 'active navbar-link': \"navbar-link\"}\n              onClick={() => setActiveLink('projects')}\n            >\n              Projects\n            </Nav.Link>\n          </Nav>\n          <span className={'navbar-text'}>\n            <div className=\"social-icon\">\n              <a href=\"#\">\n                <img src={navIcon1} alt=\"\" />\n              </a>\n              <a href=\"#\">\n                <img alt=\"\" src={navIcon2} />\n              </a>\n              <a href=\"#\">\n                <img alt=\"\" src={navIcon3} />\n              </a>\n            </div>\n            <Nav.Link\n              href=\"#connect\"\n              className='button_link'\n            >\n              Let's Connect\n            </Nav.Link>\n          </span>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","/Users/a1/Documents/Programming/portfolio-test/src/components/Banner/Banner.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Skills/Skills.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Projects/Projects.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Contact/Contact.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Footer/Footer.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Projects/ProjectCard.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Footer/MailchimpForm.tsx",[],[],"/Users/a1/Documents/Programming/portfolio-test/src/components/Footer/NewsLetter.tsx",[],[],{"ruleId":"66","severity":1,"message":"67","line":64,"column":15,"nodeType":"68","endLine":64,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":67,"column":15,"nodeType":"68","endLine":67,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":70,"column":15,"nodeType":"68","endLine":70,"endColumn":27},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]